{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Передаточные функции и их реализация на примере\n",
    "\n",
    "Постановка задачи:\n",
    "Использовать функции передачи для упрощения модели маятника с двигателем. Посмотрtnm на результаты работы 2-х видов передаточных функций\n",
    "\n",
    "Этапы работы:\n",
    "1. Для начала смоделируем модель движения маятника с мотором, создадим классы DC_motor_model для описания мотора и его параметров, класс Pendulum_model для описания параметров маятника и класс Simulator для запуска симуляции нашей модели. Также внедрен класс Pendulum_tf для реализации функции передачи второго порядка.\n",
    "2. Далее, мы рассморим 2 передаточные функции: the step response and the response to sinusoidal signals. Первая, по сути, является экспериментом, в котором меняется вход системы на унитарное значение и мы наблюдаем за выходом, чтобы увидеть, как он развивается. Это делается с помощью функции step( ). Вторая функция дает нам информацию о поведении системы в зависимости от частоты входных данных. Здесь мы используем функцию lsim( ). Первая функция будет разобрана на примере (тк в модели она показывает не лучшие результаты), вторая будет использована в модели движения маятника с мотором.\n",
    "\n",
    "## Класс мотора\n",
    "Предположим, что динамика мотора подчиняется следующему выражению:\n",
    "\n",
    "$ \\dot τ\\ = - a k τ + k u$\n",
    "\n",
    ", где τ - крутящий момент силы, a и k - эмпирически определенные коэффициенты (a определяет инерцию, k определяет взвешивает усилие для изменения крутящего момента), u - напряжение.\n",
    "\n",
    "## Класс маятника\n",
    "Для маятника нам важны такие показатели как: M - масса L - длина, Drag Coef - коэффициент сопротивления, Theta init - угол, g - коэффициент свободного падения. Для наглядности, прикрепляю картинку:"
   ]
  },
  {
   "attachments": {
    "1*NIIia39Wr_Y6QVoY5j35ZQ.png": {
     "image/png": ""
    }
   },
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "![1*NIIia39Wr_Y6QVoY5j35ZQ.png](attachment:1*NIIia39Wr_Y6QVoY5j35ZQ.png)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Уравнение, которому подчиняется маятник, прикрепленный к оси вращения (нелинейная модель маятника):\n",
    "$ \\ddot θ = - \\frac {g * sin(θ)} {L} + \\frac {τ - c_d * \\dot θ} {M}$"
   ]
  },
  {
   "attachments": {
    "1*eYASexTlV2f8vrWZhQh-vg.png": {
     "image/png": ""
    }
   },
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "![1*eYASexTlV2f8vrWZhQh-vg.png](attachment:1*eYASexTlV2f8vrWZhQh-vg.png)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Pendulum Parameters: Mass = 5.1, L = 1.4, Drag Coef. = 2.5, Theta init = 0.0\n",
      "Motor Parameters: a = 1, k = 1\n",
      "Pendulum TF Parameters: Gain = 0.028, Omega = 1.7304, Zeta = 0.62257, \n",
      "\n",
      "--- SIMULATION CONFIG. ---\n",
      "\n",
      "Simulation time: 25.0 sec\n",
      "Time granulatiry: 20.0ms\n",
      "Initial states: [0.0, 0.0, 0.0, 0.0, 0.0]\n",
      "\n",
      "--- SIMULATION Begins ---\n",
      "\n",
      "Simulation at 0%\n",
      "Simulation at 10%\n",
      "Simulation at 20%\n",
      "Simulation at 30%\n",
      "Simulation at 40%\n",
      "Simulation at 50%\n",
      "Simulation at 60%\n",
      "Simulation at 70%\n",
      "Simulation at 80%\n",
      "Simulation at 90%\n",
      "\n",
      "Elapsed time: 0.5603790283203125 sec.\n",
      "\n",
      "--- SIMULATION Finished. ---\n",
      "\n",
      "\n",
      "--- TF SIMULATION Begins ---\n",
      "\n",
      "[array([0.08383996]), [1, 2.1545902559999996, 2.99428416]]\n",
      "TransferFunctionContinuous(\n",
      "array([0.08383996]),\n",
      "array([1.        , 2.15459026, 2.99428416]),\n",
      "dt: None\n",
      ")\n",
      "\n",
      "Elapsed time: 0.062280893325805664 sec.\n",
      "\n",
      "--- TF SIMULATION Finished (TF is not used) ---\n",
      "\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 3 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "import numpy as np\n",
    "import scipy\n",
    "from scipy import signal as sig\n",
    "import random\n",
    "import time\n",
    "import json\n",
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt\n",
    "from types import MethodType\n",
    "from scipy.integrate import odeint, solve_ivp\n",
    "\n",
    "class DC_motor_model:\n",
    "    def __init__(self):\n",
    "        #Параметры\n",
    "        self.a = None\n",
    "        self.k = None # a и k - коэффициенты модели\n",
    "        self.voltage_sat = None #Максимальная мощность мотора\n",
    "        self.store_data = False\n",
    "        #Полученные значения\n",
    "        self._last_x1_m = 0.0\n",
    "        self._x1_m = 0.0 #Крутящий момент силы\n",
    "        self._dx1_m = 0.0\n",
    "        self._y1_m = 0.0\n",
    "        self.torque_vals = []\n",
    "        self.instance_name = None\n",
    "\n",
    "    def load_config(self):\n",
    "        with open(\"configurationm.json\") as json_file:\n",
    "            config_file = json.load(json_file)\n",
    "        #Загружаем параметры модели из файла\n",
    "        self.a = config_file[self.instance_name][\"a\"]\n",
    "        self.k = config_file[self.instance_name][\"k\"]\n",
    "        self.store_data = config_file[self.instance_name][\"store_data\"]\n",
    "\n",
    "    def initialize(self, instance_name):\n",
    "        self.instance_name = instance_name\n",
    "        #Загружаем данные, полученные в предыдущей функции\n",
    "        self.load_config()\n",
    "        print(\"Motor Parameters: a = {}, k = {}\".format(self.a, self.k))\n",
    "\n",
    "    def update_states(self, x1_m, u):\n",
    "        #DC motor model: taup + a * k * tau = k * u\n",
    "        self._last_x1_m = self._x1_m\n",
    "        self._dx1_m = - self.a * self.k * self._x1_m + self.k * u\n",
    "        self._y1_m = self._x1_m\n",
    "        #Обновляем значение переменной\n",
    "        self._x1_m = x1_m\n",
    "        if self.store_data:\n",
    "            self.torque_vals.update(x1_m)\n",
    "        return self._dx1_m\n",
    "\n",
    "    def get_torque(self):\n",
    "        return self._last_x1_m\n",
    "\n",
    "    \n",
    "class Pendulum_model:\n",
    "    def __init__(self):\n",
    "        self.instance_name = None\n",
    "        self.first_step = True\n",
    "        #Параметры\n",
    "        self.mass = None\n",
    "        self.arm_L = None\n",
    "        self.theta_init = None\n",
    "        self.drag = None\n",
    "        self.g = None\n",
    "        #Полученные значения\n",
    "        self._theta = 0.0\n",
    "        self._dtheta = 0.0\n",
    "        self._d2theta = 0.0\n",
    "        self._dp = 0.0\n",
    "        #для хранения полученных данных\n",
    "        self.d2theta_values = []\n",
    "        self.dtheta_values = []\n",
    "        #подсистема (предыдущий класс)\n",
    "        self.motor = DC_motor_model()\n",
    "\n",
    "    def load_config(self):\n",
    "        with open(\"configurationm.json\") as json_file:\n",
    "            config_file = json.load(json_file)\n",
    "        #Загружаем параметры модели из файла\n",
    "        if \"g\" in config_file.keys():\n",
    "            self.g = config_file[\"g\"]\n",
    "        else:\n",
    "            self.g = 9.81\n",
    "        self.mass = config_file[self.instance_name][\"mass\"]\n",
    "        self.arm_L = config_file[self.instance_name][\"length\"]\n",
    "        self.drag = config_file[self.instance_name][\"drag_coef\"]\n",
    "        self._theta = config_file[self.instance_name][\"theta_init\"]\n",
    "        self.store_data = config_file[self.instance_name][\"store_data\"]\n",
    "\n",
    "    def initialize(self, instance_name):\n",
    "        self.instance_name = instance_name\n",
    "        self.load_config()\n",
    "        print(\"Pendulum Parameters: Mass = {}, L = {}, Drag Coef. = {}, Theta init = {}\".format(self.mass, self.arm_L, self.drag, self._theta))\n",
    "        self.motor.initialize(\"dc_motor_model1\")\n",
    "\n",
    "    def update_states(self, inputs, dc_volts):\n",
    "        #Достаем исходные данные\n",
    "        torque = inputs[0]\n",
    "        self._theta = inputs[1]\n",
    "        self._dtheta = inputs[2]\n",
    "        self._dp = inputs[4]  #скорость\n",
    "        #Обновление динамики мотора\n",
    "        dtorque = self.motor.update_states(torque, dc_volts)\n",
    "        #Нелинейная модель маятника\n",
    "        self._d2theta = -(self.g / self.arm_L) * np.sin(self._theta) + (torque - self.drag * self._dtheta) / self.mass\n",
    "        self._dv = self.arm_L * self._dtheta\n",
    "        #Сохраняем данные\n",
    "        if self.store_data:\n",
    "            self.d2theta_values.append(self._d2theta)\n",
    "            self.dtheta_values.append(self._dtheta)\n",
    "        return [dtorque, self._dtheta, self._d2theta, self._dp, self._dv]\n",
    "    \n",
    "class Pendulum_tf:\n",
    "    def __init__(self):\n",
    "        self.instance_name = None\n",
    "        self.first_step = True\n",
    "        self.tf_2nd_order = True\n",
    "        #Параметры\n",
    "        self.k = None\n",
    "        self.poles = []\n",
    "        self.zeros = []\n",
    "        self.w = None\n",
    "        self.z = None\n",
    "\n",
    "    def load_config(self):\n",
    "        with open(\"configurationm.json\") as json_file:\n",
    "            config_file = json.load(json_file)\n",
    "        #Загружаем параметры модели из файла\n",
    "        self.tf_2nd_order = config_file[self.instance_name][\"def_poles_zeros\"]\n",
    "        if self.tf_2nd_order:\n",
    "            self.k = config_file[self.instance_name][\"tf_2nd_order\"][\"gain\"]\n",
    "            self.w = config_file[self.instance_name][\"tf_2nd_order\"][\"omega\"]\n",
    "            self.z = config_file[self.instance_name][\"tf_2nd_order\"][\"zeta\"]\n",
    "\n",
    "    def initialize(self, instance_name):\n",
    "        self.instance_name = instance_name\n",
    "        self.load_config()\n",
    "        print(\"Pendulum TF Parameters: Gain = {}, Omega = {}, Zeta = {}, \".format(self.k, self.w, self.z))\n",
    "\n",
    "    @staticmethod\n",
    "    def second_order_tf(gain, omega, zeta):\n",
    "        num = [omega**2]\n",
    "        den = [1, 2 * zeta * omega, omega**2]\n",
    "        return [np.dot(gain, num), den]\n",
    "\n",
    "    def response_sim(self, t, inputs):\n",
    "        num = [1]\n",
    "        den = [1]\n",
    "        if not self.tf_2nd_order:\n",
    "            for i in range(len(self.zeros)):\n",
    "                num = np.polymul(num, self.zeros[i])\n",
    "            num = np.dot(self.k, num)\n",
    "            for i in range(len(self.poles)):\n",
    "                den = np.polymul(den, self.poles[i])\n",
    "        else:\n",
    "            [num, den] = self.second_order_tf(self.k, self.w, self.z)\n",
    "            print(self.second_order_tf(self.k, self.w, self.z))\n",
    "        Gs = sig.TransferFunction(num, den)\n",
    "        print(Gs)\n",
    "        return sig.lsim2(Gs, U = inputs, T = t)\n",
    "\n",
    "class Simulator:\n",
    "    def __init__(self):\n",
    "        #Параметры для симуляции\n",
    "        self.perfect_sensor = None\n",
    "        self.init_states = []\n",
    "        self.sim_time = None\n",
    "        self.sim_step_cnt = 0\n",
    "        self.cont_smpls = None  #Continuous samples\n",
    "        self.sample_period_ms = None\n",
    "        self.save_data = None\n",
    "        self.save_figure = None\n",
    "        self.title = \"Title\"\n",
    "        self.instance_name = None\n",
    "        self.n = None\n",
    "        self.time_dict = {}\n",
    "        self.refs_dict = {}\n",
    "        self.sim_data = {}\n",
    "        #Доп модели\n",
    "        self.arm_1dof = Pendulum_model()\n",
    "        self.arm_1dof_tf = Pendulum_tf()\n",
    "        #Итоговые значения\n",
    "        self.perfect_out_states = []\n",
    "        self.real_out_states = []\n",
    "\n",
    "    def _load_config(self):\n",
    "        with open(\"configurationm.json\") as json_file:\n",
    "            config_file = json.load(json_file)\n",
    "        #Загружаем параметры из файла\n",
    "        self.perfect_sensor = config_file[self.instance_name][\"perfect_sensor\"]\n",
    "        self.init_states = config_file[self.instance_name][\"initial_states\"]\n",
    "        self.sim_time = config_file[self.instance_name][\"sim_time\"]\n",
    "        self.cont_smpls = config_file[self.instance_name][\"continuous_samples\"]\n",
    "        self.sample_period_ms = 1000.0 / config_file[self.instance_name][\"sampling_freq\"]\n",
    "        self.save_data = config_file[self.instance_name][\"save_data\"]\n",
    "        self.save_figure = config_file[self.instance_name][\"save_figure\"]\n",
    "        self.title = config_file[self.instance_name][\"title\"]\n",
    "\n",
    "    def _load_references(self):\n",
    "        self.refs_dict[\"ref_t_vector\"] = np.linspace(0, self.sim_time, self.n - 1)\n",
    "        self.refs_dict[\"dc_values\"] = [0.0] * (self.n - 1)\n",
    "        for i in range( int((self.n - 1) * 0.1), self.n - 1 ):\n",
    "            self.refs_dict[\"dc_values\"][i] = 5.0\n",
    "\n",
    "    def initialize(self, instance_name):\n",
    "        self.instance_name = instance_name\n",
    "        self._load_config()\n",
    "        self.arm_1dof.initialize(\"robot_arm1\")\n",
    "        self.arm_1dof_tf.initialize(\"robot_arm1_tf\")\n",
    "        self.n = int((1 / (self.sample_period_ms / 1000.0)) * self.sim_time + 1)\n",
    "        self.time_dict[\"time_vector\"] = np.linspace(0, self.sim_time, (self.n - self.cont_smpls) * (self.cont_smpls-1)-1)\n",
    "        self.time_dict[\"intra_steps\"] = list( np.linspace(0, self.sim_time / self.n, self.cont_smpls) )\n",
    "        self._load_references()\n",
    "        self.sim_data[\"states\"] = []\n",
    "        self.sim_data[\"states\"].append(self.init_states)\n",
    "        if not self.perfect_sensor:\n",
    "            self.sensor.measure( self.init_states[0] )\n",
    "\n",
    "    def _get_last_sys_outputs(self):\n",
    "        sys_outputs = []\n",
    "        if self.perfect_sensor:\n",
    "            sys_outputs = self.sim_data[\"states\"][-1][0]\n",
    "        else:\n",
    "            sys_outputs = self.sensor.measures[-1]\n",
    "        return sys_outputs\n",
    "\n",
    "    def _get_refs(self, index):\n",
    "        refs = {}\n",
    "        for key, item in self.refs_dict.items():\n",
    "            refs.update( {key: self.refs_dict[key][index]} )\n",
    "        return refs\n",
    "\n",
    "    def _update_states(self, t, states, dc_volts):\n",
    "        out_states = self.arm_1dof.update_states(states, dc_volts)\n",
    "        self.perfect_out_states = out_states\n",
    "        return self.perfect_out_states\n",
    "\n",
    "    def _apply_sensors_effect(self, solution):\n",
    "        for snap in solution.y.T.tolist()[1:]:\n",
    "            state = [self.sensor.measure( snap[0] )] + snap[1:]\n",
    "\n",
    "    def simulate_step(self):\n",
    "        dc_vals = self.refs_dict[\"dc_values\"][self.sim_step_cnt]\n",
    "        solution = solve_ivp( self._update_states, [0, self.sim_time / self.n],\n",
    "                              self.init_states,\n",
    "                              t_eval = self.time_dict[\"intra_steps\"],\n",
    "                              args = (dc_vals,) )\n",
    "        #Обновляем переменные для следующего шага симуляции\n",
    "        self.init_states = [state_vec[-1] for state_vec in solution.y]\n",
    "        for slice in solution.y.T.tolist()[1:]:\n",
    "            self.sim_data[\"states\"].append(slice)\n",
    "        self.sim_step_cnt += 1\n",
    "\n",
    "    def run_simulation(self):\n",
    "        print(\"\\n--- SIMULATION Begins ---\\n\")\n",
    "        initial_time = time.time()\n",
    "        t_counter = 0\n",
    "        for i in range(self.n - self.cont_smpls - 1):\n",
    "            if i >= t_counter * int((self.n - 1) / 10):\n",
    "                print(\"Simulation at {}%\".format(t_counter * 10))\n",
    "                t_counter += 1\n",
    "            #Запускаем шаг симуляции\n",
    "            self.simulate_step()\n",
    "        self.sim_data[\"states\"] = np.array(self.sim_data[\"states\"]).T.tolist()\n",
    "        #Конец\n",
    "        elapsed_time = time.time() - initial_time\n",
    "        print(\"\\nElapsed time: {} sec.\".format(elapsed_time))\n",
    "\n",
    "        print(\"\\n--- SIMULATION Finished. ---\\n\")\n",
    "\n",
    "    def run_tf_simulation(self):\n",
    "        if len(self.refs_dict[\"ref_t_vector\"]) < 1:\n",
    "            print(\"Error: load_references() must be run before simulating.\")\n",
    "            exit(-1)\n",
    "        #Начало\n",
    "        print(\"\\n--- TF SIMULATION Begins ---\\n\")\n",
    "        initial_time = time.time()\n",
    "\n",
    "        self.sim_data[\"tf_sim\"] = \\\n",
    "                    self.arm_1dof_tf.response_sim(self.refs_dict[\"ref_t_vector\"], self.refs_dict[\"dc_values\"])\n",
    "        #Конец\n",
    "        elapsed_time = time.time() - initial_time\n",
    "        print(\"\\nElapsed time: {} sec.\".format(elapsed_time))\n",
    "        print(\"\\n--- TF SIMULATION Finished (TF is not used) ---\\n\")\n",
    "\n",
    "    def store_data(self):\n",
    "        print(\"Saving simulation data...\")\n",
    "        sim_df = pd.DataFrame(self.sim_data[\"states\"])\n",
    "        sim_df = sim_df.transpose()\n",
    "        sim_df.rename({0: 'x1', 1: 'x2', 2:'y'}, inplace=True)\n",
    "        sim_df.to_csv('sim_data/fbck_lin_control_ex3.csv')\n",
    "\n",
    "    def plot_results(self):\n",
    "        plt.rcParams['axes.grid'] = True\n",
    "        fig = plt.figure()\n",
    "        fig.suptitle(\"Pendulum Model\")\n",
    "        #cтроим график зависимости theta от времени\n",
    "        plt.subplot(3,1,1)\n",
    "        if not self.perfect_sensor:\n",
    "            plt.plot( self.time_dict[\"time_vector\"], self.sensor.measures, 'b', linewidth = 1 )\n",
    "        plt.plot( self.time_dict[\"time_vector\"], self.sim_data[\"states\"][1], 'b', linewidth = 1.5 )\n",
    "        plt.ylabel('Theta [rad]')\n",
    "        #cтроим график зависимости theta от времени\n",
    "        plt.subplot(3,1,2)\n",
    "        plt.plot( self.time_dict[\"time_vector\"], self.sim_data[\"states\"][2],\n",
    "                  'b',linewidth=1.5 )\n",
    "        plt.ylabel('dtheta [rad/s]')\n",
    "        #cтроим график зависимости torque от времени\n",
    "        plt.subplot(3,1,3)\n",
    "        plt.plot( self.refs_dict[\"ref_t_vector\"],self.refs_dict[\"dc_values\"],'k--', linewidth = 1.2 )\n",
    "        plt.plot( self.time_dict[\"time_vector\"], self.sim_data[\"states\"][0], 'r', linewidth = 1 )\n",
    "        plt.ylabel('Torque [Nm]')\n",
    "        plt.xlabel('Time [s]')\n",
    "        if self.save_figure:\n",
    "            figname = \"pictures/\" + self.title + \".png\"\n",
    "            plt.savefig(figname)\n",
    "            plt.show()\n",
    "        else:\n",
    "            plt.show()\n",
    "            \n",
    "def launch_simulation():\n",
    "    simul = Simulator()\n",
    "    simul.initialize(\"simulation_1\")\n",
    "    print(\"\\n--- SIMULATION CONFIG. ---\\n\")\n",
    "    print(\"Simulation time: {} sec\".format(simul.sim_time))\n",
    "    print(\"Time granulatiry: {}ms\".format(simul.sample_period_ms))\n",
    "    print(\"Initial states: {}\".format(simul.init_states))\n",
    "    #запускаем саму программу\n",
    "    simul.run_simulation()\n",
    "    simul.run_tf_simulation()\n",
    "    #и графики\n",
    "    simul.plot_results()\n",
    "\n",
    "launch_simulation()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Мы успешно получили моторизованное моделирование маятника. Добавим теперь функции передачи. Маятник свободно качается вплоть до активации двигателя. Но что же происходит с маятником в самом низу области, когда активируется двигатель? Для ответа на данный вопрос мы используем функции передачи.\n",
    "    \n",
    "Передаточные функции (Transfer Functions, TF) - это один из способов математического описания динамической системы.\n",
    "\n",
    "Для начала рассмотрим ступенчатую функцию передачи. Эта функция имеют форму дроби, с многочленом в качестве числителя, корни которого называются нулями, и многочленом в качестве знаменателя, корни которого называются полюсами. Эти корни характеризуют поведение системы.\n",
    "\n",
    "$ G(s) = \\frac {K}{s+3.2} $\n",
    "\n",
    "В данной функции мы используем функцию Python step():"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "k = 0.9\n",
    "num = [1]\n",
    "den = [1, 0.65, 1]\n",
    "\n",
    "Gs = sig.TransferFunction(np.dot(k, num), den)\n",
    "\n",
    "t, y = sig.step(Gs)\n",
    "\n",
    "plt.plot(t, y, 'b')\n",
    "plt.xlabel('Time [s]')\n",
    "plt.ylabel('Value [Output units]')\n",
    "plt.title('Step response.')\n",
    "plt.grid()\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Далее рассмотрим передаточную функцию второго порядка. Этот метод дает нам информацию об отклике или поведении системы в зависимости от частоты входных данных. Мы используем синусоидальный сигнал в качестве входного сигнала для системы и, проводя эксперименты с разными частотами, получаем разные результаты на выходе. Здесь мы используем функцию lsim( ), которая принимает в качестве входного сигнала модели, входной сигнал модели и вектор времени. Рассмотрим на простом примере:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "k = 12.8\n",
    "num = [1]\n",
    "den = [1, 2.65, 2]\n",
    "\n",
    "Gs = sig.TransferFunction(np.dot(k, num), den)\n",
    "t = np.linspace(0, 3.5, 600)\n",
    "u = np.cos(2 * np.pi * 1.0 * t)\n",
    "\n",
    "tsim, ysim, xsim = sig.lsim2(Gs, U = u, T = t)\n",
    "\n",
    "plt.subplot(2,1,1)\n",
    "plt.ylim([-1, 1])\n",
    "plt.plot(tsim, ysim, 'r')\n",
    "plt.ylabel('Output [out. units]')\n",
    "plt.title('Simulation.')\n",
    "plt.grid()\n",
    "\n",
    "plt.subplot(2,1,2)\n",
    "plt.plot(t, u, 'b')\n",
    "plt.ylabel('Control signal [control units]')\n",
    "\n",
    "plt.xlabel('time [s]')\n",
    "plt.grid()\n",
    "\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Теперь применим этот метод второго порядка на нашу модель:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Pendulum Parameters: Mass = 5.1, L = 1.4, Drag Coef. = 2.5, Theta init = 0.0\n",
      "Motor Parameters: a = 1, k = 1\n",
      "Pendulum TF Parameters: Gain = 0.028, Omega = 1.7304, Zeta = 0.62257, \n",
      "Simulation at 0%\n",
      "Simulation at 10%\n",
      "Simulation at 20%\n",
      "Simulation at 30%\n",
      "Simulation at 40%\n",
      "Simulation at 50%\n",
      "Simulation at 60%\n",
      "Simulation at 70%\n",
      "Simulation at 80%\n",
      "Simulation at 90%\n",
      "[array([0.08383996]), [1, 2.1545902559999996, 2.99428416]]\n",
      "TransferFunctionContinuous(\n",
      "array([0.08383996]),\n",
      "array([1.        , 2.15459026, 2.99428416]),\n",
      "dt: None\n",
      ")\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "class Simulator:\n",
    "    def __init__(self):\n",
    "        self.perfect_sensor = None\n",
    "        self.init_states = []\n",
    "        self.sim_time = None\n",
    "        self.sim_step_cnt = 0\n",
    "        self.cont_smpls = None\n",
    "        self.sample_period_ms = None\n",
    "        self.save_data = None\n",
    "        self.save_figure = None\n",
    "        self.title = \"Title\"\n",
    "        self.instance_name = None\n",
    "        self.n = None\n",
    "        self.time_dict = {}\n",
    "        self.refs_dict = {}\n",
    "        self.sim_data = {}\n",
    "        self.arm_1dof = Pendulum_model()\n",
    "        self.arm_1dof_tf = Pendulum_tf()\n",
    "        self.perfect_out_states = []\n",
    "        self.real_out_states = []\n",
    "\n",
    "    def _load_config(self):\n",
    "        with open(\"configurationm.json\") as json_file:\n",
    "            config_file = json.load(json_file)\n",
    "        self.perfect_sensor = config_file[self.instance_name][\"perfect_sensor\"]\n",
    "        self.init_states = config_file[self.instance_name][\"initial_states\"]\n",
    "        self.sim_time = config_file[self.instance_name][\"sim_time\"]\n",
    "        self.cont_smpls = config_file[self.instance_name][\"continuous_samples\"]\n",
    "        self.sample_period_ms = 1000.0 / config_file[self.instance_name][\"sampling_freq\"]\n",
    "        self.save_data = config_file[self.instance_name][\"save_data\"]\n",
    "        self.save_figure = config_file[self.instance_name][\"save_figure\"]\n",
    "        self.title = config_file[self.instance_name][\"title\"]\n",
    "\n",
    "    def _load_references(self):\n",
    "        self.refs_dict[\"ref_t_vector\"] = np.linspace(0, self.sim_time, self.n - 1)\n",
    "        self.refs_dict[\"dc_values\"] = [0.0]*(self.n - 1)\n",
    "        for i in range( int((self.n - 1) * 0.1), self.n - 1 ):\n",
    "            self.refs_dict[\"dc_values\"][i] = 5.0\n",
    "\n",
    "    def initialize(self, instance_name):\n",
    "        self.instance_name = instance_name\n",
    "        self._load_config()\n",
    "        self.arm_1dof.initialize(\"robot_arm1\")\n",
    "        self.arm_1dof_tf.initialize(\"robot_arm1_tf\")\n",
    "        self.n = int((1 / (self.sample_period_ms / 1000.0)) * self.sim_time + 1)\n",
    "        self.time_dict[\"time_vector\"] = np.linspace(0, self.sim_time, (self.n - self.cont_smpls) * (self.cont_smpls-1)-1)\n",
    "        self.time_dict[\"intra_steps\"] = list( np.linspace(0, self.sim_time / self.n, self.cont_smpls) )\n",
    "        self._load_references()\n",
    "        self.sim_data[\"states\"] = []\n",
    "        self.sim_data[\"states\"].append(self.init_states)\n",
    "        if not self.perfect_sensor:\n",
    "            self.sensor.measure( self.init_states[0] )\n",
    "\n",
    "    def _get_last_sys_outputs(self):\n",
    "        sys_outputs = []\n",
    "        if self.perfect_sensor:\n",
    "            sys_outputs = self.sim_data[\"states\"][-1][0]\n",
    "        else:\n",
    "            sys_outputs = self.sensor.measures[-1]\n",
    "        return sys_outputs\n",
    "\n",
    "    def _get_refs(self, index):\n",
    "        refs = {}\n",
    "        for key, item in self.refs_dict.items():\n",
    "            refs.update( {key: self.refs_dict[key][index]} )\n",
    "        return refs\n",
    "\n",
    "    def _update_states(self, t, states, dc_volts):\n",
    "        out_states = self.arm_1dof.update_states(states, dc_volts)\n",
    "        self.perfect_out_states = out_states\n",
    "        return self.perfect_out_states\n",
    "\n",
    "    def _apply_sensors_effect(self, solution):\n",
    "        for snap in solution.y.T.tolist()[1:]:\n",
    "            state = [self.sensor.measure( snap[0] )] + snap[1:]\n",
    "\n",
    "    def simulate_step(self):\n",
    "        dc_vals = self.refs_dict[\"dc_values\"][self.sim_step_cnt]\n",
    "        solution = solve_ivp( self._update_states, [0, self.sim_time / self.n],\n",
    "                              self.init_states,\n",
    "                              t_eval = self.time_dict[\"intra_steps\"],\n",
    "                              args = (dc_vals,) )\n",
    "        self.init_states = [state_vec[-1] for state_vec in solution.y]\n",
    "        for slice in solution.y.T.tolist()[1:]:\n",
    "            self.sim_data[\"states\"].append(slice)\n",
    "        self.sim_step_cnt += 1\n",
    "\n",
    "    def run_simulation(self):\n",
    "        initial_time = time.time()\n",
    "\n",
    "        t_counter = 0\n",
    "        for i in range(self.n - self.cont_smpls - 1):\n",
    "            if i >= t_counter * int((self.n - 1) / 10):\n",
    "                print(\"Simulation at {}%\".format(t_counter * 10))\n",
    "                t_counter += 1\n",
    "            self.simulate_step()\n",
    "        self.sim_data[\"states\"] = np.array(self.sim_data[\"states\"]).T.tolist()\n",
    "        elapsed_time = time.time() - initial_time\n",
    "\n",
    "    def run_tf_simulation(self):\n",
    "        if len(self.refs_dict[\"ref_t_vector\"]) < 1:\n",
    "            print(\"Error: load_references() must be run before simulating.\")\n",
    "            exit(-1)\n",
    "        initial_time = time.time()\n",
    "\n",
    "        self.sim_data[\"tf_sim\"] = \\\n",
    "                    self.arm_1dof_tf.response_sim(self.refs_dict[\"ref_t_vector\"], self.refs_dict[\"dc_values\"])\n",
    "        elapsed_time = time.time() - initial_time\n",
    "\n",
    "    def store_data(self):\n",
    "        sim_df = pd.DataFrame(self.sim_data[\"states\"])\n",
    "        sim_df = sim_df.transpose()\n",
    "        sim_df.rename({0: 'x1', 1: 'x2', 2:'y'}, inplace = True)\n",
    "        sim_df.to_csv('sim_data/fbck_lin_control_ex3.csv')\n",
    "\n",
    "    def plot_results(self):\n",
    "        plt.rcParams['axes.grid'] = True\n",
    "        fig = plt.figure()\n",
    "        fig.suptitle(\"Pendulum Model\")\n",
    "\n",
    "        plt.subplot(3,1,1)\n",
    "        if not self.perfect_sensor:\n",
    "            plt.plot( self.time_dict[\"time_vector\"], self.sensor.measures, 'b', linewidth = 1 )\n",
    "        plt.plot(self.time_dict[\"time_vector\"], self.sim_data[\"states\"][1],'b',linewidth = 1.5)\n",
    "        plt.plot(self.sim_data[\"tf_sim\"][0], self.sim_data[\"tf_sim\"][1],'k',linewidth = 1.0)\n",
    "        plt.ylabel('Theta [rad]')\n",
    "        if self.save_figure:\n",
    "            figname = \"pictures/\" + self.title + \".png\"\n",
    "            plt.savefig(figname)\n",
    "            plt.show()\n",
    "        else:\n",
    "            plt.show()\n",
    "            \n",
    "def launch_simulation():\n",
    "    simul = Simulator()\n",
    "    simul.initialize(\"simulation_1\")\n",
    "    simul.run_simulation()\n",
    "    simul.run_tf_simulation()\n",
    "    simul.plot_results()\n",
    "\n",
    "launch_simulation()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Мы наблюдаем на графике довольно неплохие результаты. Он не совсем идеален, но достаточно близок для многих практических применений.\n",
    "\n",
    "Обычно, чем выше частота, тем ниже величина выхода и тем выше разность фаз между входом и выходом. Разница фаз похожа на некоторую задержку между временем изменения ввода и временем, когда вы видите это изменение в выходных данных. Эта разница увеличивается с увеличением частоты.\n",
    "Вы можете легко проверить эту частотную характеристику на диаграмме Боде для линейных систем. Пример:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "k = -0.9\n",
    "num_zeros = [ [1, -1.15], [1, 1.3, 0.1] ]\n",
    "den_poles = [ [1, 0.5], [1, 0.3], [1, 1.8, 0.7] ]\n",
    "\n",
    "num = [1]\n",
    "den = [1]\n",
    "for i in range(len(num_zeros)):\n",
    "    num = np.polymul(num, num_zeros[i])\n",
    "for i in range(len(den_poles)):\n",
    "    den = np.polymul(den, den_poles[i])\n",
    "\n",
    "Gs = sig.TransferFunction(np.dot(k, num), den)\n",
    "\n",
    "w, mag, phase = sig.bode(Gs)\n",
    "\n",
    "plt.subplot(2,1,1)\n",
    "plt.semilogx(w, mag, 'r')\n",
    "plt.ylabel('Magnitude [dB]')\n",
    "plt.title('Bode diagram.')\n",
    "plt.grid()\n",
    "\n",
    "plt.subplot(2,1,2)\n",
    "plt.semilogx(w, phase, 'r')\n",
    "plt.ylabel('Phase (deg)')\n",
    "\n",
    "plt.xlabel('freq [rad/s]')\n",
    "plt.grid()\n",
    "\n",
    "plt.show()"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.6"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
